<% @claim = false %>

<div class="prose">

  <h1>
    Snappy UI<br />
    for server-side web apps</h1>

  <p>
    Up.js gives your traditional web application fast-responding views
    with minimal changes to your code and development style.
    If you require modern UX but don't want to pay the Javascript MVC complexity tax,
    Up.js can be a solution for you.
  </p>

  <h2>How it works</h2>

  <p>
    See <a href="/up.link">Linking to page fragments</a> and other documentation pages.
  </p>

  <p>
    All Up.js functionality is available as both unobtrusive behavior (through HTML attributes
    like <code>up-target</code>)
    and Javascript functions for programmatic access and integration with your code.
  </p>

  <h2>
    Design goals
  </h2>

  <h3>Client-side MVC is a complexity driver</h3>

  <p>
    In order to meet the demand for modern, fast-moving interfaces,
    we have pushed more and more code into the client. 
    This has vastly increased the complexity of our technology stacks.
    Modern web applications have a complete MV* stack on both sides of the wire,
    which we need to understand, synchronize and maintain.
  </p>
  
  <p>
    We would like to reclaim some of the simplicity of
    classic server-side MVC development.
  </p>
  
  <h3>Server-side code should stay the same</h3>

  <ul>
    <li>It should not require extra controller actions to update a page part via AJAX</li>
  </ul>

  <h3>Batteries included</h3>

  <ul>
    <li>We will ship a basic implementation for the most established UI patterns like navigation bars, infinite scrolling, drop-down menus, modals</li>
    <li>We will split this out into a plugin architecture eventually, but not now</li>
  </ul>

  <h3>Not for ambitious UIs</h3>

  <ul>
    <li>We don’t want to compromise ease of use for simple patterns by providing a million hooks and options</li>
    <li>Limits in configurability</li>
    <li>You can always roll your own code</li>
    <li>Probably the wrong choice if you want to create something very ambitious</li>
  </ul>

  <h3>(Sort of) plays nice with existing JS code</h3>
  <ul>
    <li>If you're ready to clean up your event binding with the <a href="/up.magic">mechanisms that Up.js provides</a></li>
  </ul>

  <h3>URLs are important</h3>

  <ul>
    <li>Every page has an URL</li>
    <li>Works nice with Google Works with browsers that don’t speak Up.js (e. g. IE9 doesn’t speak pushState)</li>
  </ul>

  <h3>Be small</h3>

  <ul>
    <li>8 KB gzipped</li>
    <li>jQuery as the only dependency</li>
  </ul>

  <h3>Both UJS and programmatic interfaces</h3>

  <ul>
    <li>...</li>
  </ul>

  <h2>Installation</h2>

  <p>
    The framework consists of two files:
  </p>
  
  <ul>
    <li><a href="up.js"><code>up.js</code></a> (<a href="up.min.js">minified</a>)</li>
    <li><a href="up.css"><code>up.css</code></a> (<a href="up.min.css">minified</a>)</li>
  </ul>
  
  <p>
    Download the files and include them in your page using <code>&lt;script&gt;</code>
    and <code>&lt;style&gt;</code> tags.
  </p>
  
  <h3>Bower</h3>
  
  <p>
    You can also download the files using Bower:
  </p>
  
  <pre><code class="nohighlight">bower install upjs</code></pre>
  
  <p>
    This will download the files to
    <code>bower_components/upjs/dist/up.js</code> and <code>bower_components/upjs/dist/up.css</code>. 
  </p>
  
  
  <h3>Ruby on Rails</h3>
  
  <p>
    To install Up.js in Rails, add the following line to your `Gemfile`:
  </p>

  <pre><code class="ruby">gem 'upjs-rails'</code></pre>

  <p>Now run <code>bundle install</code> and restart your development server.</p>

  <p>Add the following line to your <code>application.js</code> manifest:</p>

  <pre><code class="javascript">//= require up</code></pre>

  <p>
    Also add the following line to your <code>application.css</code> manifest:</p>
  </p>

  <pre><code class="scss">/*
 *= require up
 */</code></pre>

  <h2>Getting started</h2>

  <p>
    This is the best place to start with the documentation:<br />
    <a href="/up.link">Linking to page fragments</a>
  </p>

  <h2>
    Project status
  </h2>

  <p>
    Up.js is very far in terms of the features we want to include,
    but it lacks proper tests and prolonged exposure to the real world.
    We're currently building a few apps with to improve the public API.
  </p>

  <p>
    Don't use this in production yet unless you're ready to get involved with testing
    and bugfixing.
  </p>

</div>
